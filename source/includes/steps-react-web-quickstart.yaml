title: Set up a New React App
ref: set-up-a-new-react-app
level: 4
content: |
  Generate a new application template using `create-react-app
  <https://create-react-app.dev/>`__:

  .. code-block:: shell
     
     npx create-react-app realm-react-quickstart

  Navigate into the new app and install the ``realm-web`` package:

  .. code-block:: shell
     
     cd realm-react-quickstart
     yarn add realm-web

  Once installation is complete, open ``/src/App.js`` and delete all of the
  contents.
---
title: Import Dependencies & Connect to Your Realm App
ref: import-dependencies-connect-to-your-realm-app
level: 4
content: |
  The Realm Web SDK contains everything you need to connect to a MongoDB Realm
  application from a browser application. In ``/src/App.js``, add the following
  code that imports the Web SDK and uses it to instantiate a new ``app`` object:
  
  .. code-block:: javascript
     
     import "./App.css";
     import React from "react";
     import * as Realm from "realm-web";
     
     const REALM_APP_ID = "<Your App ID>"; // e.g. myapp-abcde
     const app = new Realm.App({ id: REALM_APP_ID });
  
  The ``app`` object represents your Realm app. You'll use it to authenticate
  and manage the users that interact with your app.
---
title: Create React Components
ref: create-react-components
level: 4
content: |
  In ``/src/App.js``, add the following components that display details about a
  given user and allow users to log in.

  .. code-block:: javascript
     
     // Create a component that display the given user's details
     function UserDetail({ user }) {
       return (
         <div>
           <h1>Logged in with anonymous id: {user.id}</h1>
         </div>
       );
     }
     
     // Create a component that lets an anonymous user log in
     function Login({ setUser }) {
       const loginAnonymous = async () => {
         const user = await app.logIn(Realm.Credentials.anonymous());
         setUser(user);
       };
       return <button onClick={loginAnonymous}>Log In</button>;
     }
---
title: Create and Export the App Component
ref: create-and-export-the-app-component
level: 4
content: |
  In ``/src/App.js``, create the following component that stores the current
  user in local state and conditionally renders either details about the current
  user or a login screen if no user is currently authenticated.
  
  .. code-block:: javascript
     
     export default function App() {
       // Keep the logged in Realm user in local state. This lets the app re-render
       // whenever the current user changes (e.g. logs in or logs out).
       const [user, setUser] = React.useState(app.currentUser);
       
       // If a user is logged in, show their details.
       // Otherwise, show the login screen.
       return (
         <div className="App">
           <div className="App-header">
             {user ? <UserDetail user={user} /> : <Login setUser={setUser} />}
           </div>
         </div>
       );
     }
---
title: Run the App
ref: run-the-app
level: 4
content: |
  You're now ready to connect to your Realm app and log in! Make sure you've
  saved your changes to ``/src/App.js`` and then run the following command from
  the project root:

  .. code-block:: shell
     
     yarn start

  .. code-block:: shell
     
     Compiled successfully!
     
     You can now view realm-quickstart-web in the browser.
     
       Local:  http://localhost:3000
  
  Open http://localhost:3000 in your browser and test that you can successfully
  log in as an anonymous user.
...
